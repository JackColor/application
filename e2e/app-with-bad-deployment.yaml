apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: "app-with-bad-deployment"
  labels:
    app.kubernetes.io/name: "app-with-bad-deployment"
spec:
  type: "test"
  selector:
    matchLabels:
      app.kubernetes.io/name: "app-with-bad-deployment"
  componentKinds:
  - group: apps
    kind: Deployment
  - group: batch
    kind: Job
  - group: v1
    kind: Service
  - group: v1
    kind: ConfigMap
  addOwnerRef: true
  descriptor:
    type: "test"
    keywords:
    - "test"
    version: "0.0.1"
    description: "It is a simple E2E test app"
    maintainers:
    - name: Test Dev
      email: dev@test.org
    owners:
    - name: Test Admin
      email: admin@test.org
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bad-deployment
  labels:
    app.kubernetes.io/name: "app-with-bad-deployment"
    app.kubernetes.io/version: "3"
    app.kubernetes.io/component: "hello-world"
    app.kubernetes.io/tier: "backend"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "app-with-bad-deployment"
      app.kubernetes.io/component: "hello-world"
      app.kubernetes.io/tier: "backend"
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "app-with-bad-deployment"
        app.kubernetes.io/component: "hello-world"
        app.kubernetes.io/tier: "backend"
    spec:
      containers:
      - image: "bad-image"
        name: hello-world
        ports:
        - containerPort: 8080
          protocol: TCP
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pi-02
  labels:
    app.kubernetes.io/name: "app-with-bad-deployment"
spec:
  template:
    spec:
      containers:
      - name: pi
        image: perl
        command: ["perl",  "-Mbignum=bpi", "-wle", "print bpi(2000)"]
      restartPolicy: Never
  backoffLimit: 4
---
apiVersion: v1
kind: Service
metadata:
  name: test-webserver-svc-02
  labels:
    app.kubernetes.io/name: "app-with-bad-deployment"
    app.kubernetes.io/version: "3"
    app.kubernetes.io/component: "test-svc"
    app.kubernetes.io/tier: "frontend"
spec:
  ports:
  - port: 80
  selector:
    app.kubernetes.io/name: "app-with-bad-deployment"
    app.kubernetes.io/component: "test-webserver"
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-configmap-02
  labels:
    app.kubernetes.io/name: "app-with-bad-deployment"
data:
  data-1: value-1
  data-2: value-2
